<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1254.v3f64639b_11dd">
  <actions>
    <org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction plugin="workflow-multibranch@716.vc692a_e52371b_">
      <jobPropertyDescriptors>
        <string>hudson.model.ParametersDefinitionProperty</string>
      </jobPropertyDescriptors>
    </org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>docker_repo</name>
          <description>Docker Image Name</description>
          <defaultValue>test1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>docker_server</name>
          <description>Docker Registry URL</description>
          <defaultValue>localhost:5000</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3536.vb_8a_6628079d5">
    <script>node {
   
    withCredentials([string(credentialsId: &apos;test&apos;, variable: &apos;test&apos;)]) {
    echo &quot;test -&gt; $test&quot;
    // cred = &quot;$test&quot;;
        properties([
            parameters([
                string(name: &apos;docker_repo&apos;, defaultValue: &quot;$test&quot;, description: &apos;Docker Image Name&apos;),
                string(name: &apos;docker_server&apos;, defaultValue: &apos;localhost:5000&apos;, description: &apos;Docker Registry URL&apos;),
    
            ])
        ])
    }


    def mvnHome
    stage(&apos;Preparation&apos;) { // for display purposes
        // Get some code from a GitHub repository
        echo &quot;here et&quot;;
       
    }
   
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>