---
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_web
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_web
    when: "force_reload==true"
    ignore_errors: true
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_worker
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_worker
    when: "force_reload==true"
    ignore_errors: true
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_plugins
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_plugins
    when: "force_reload==true"
    ignore_errors: true
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_asyncmigrationscheck
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_asyncmigrationscheck
    when: "force_reload==true"
    ignore_errors: true
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_clickhouse
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_clickhouse
    when: "force_reload==true"
    ignore_errors: true
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_zookeeper
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_zookeeper
    when: "force_reload==true"
    ignore_errors: true
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_kafka
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_kafka
    when: "force_reload==true"
    ignore_errors: true
  - name: Removing the existing service {{  docker_service_stack_name  }}_{{ docker_service_name }}_object_storage
    shell: docker service rm {{  docker_service_stack_name  }}_{{ docker_service_name }}_object_storage
    when: "force_reload==true"
    ignore_errors: true